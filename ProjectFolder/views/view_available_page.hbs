<head>
    <style>
        .tooltip-container {
            position: relative;
            display: inline-block;
        }

        .tooltiptext {
            visibility: hidden;
            background-color: white;
            padding: 10px;
            border-radius: 3px;
            font-size: 1rem;
            color: black;
            position: absolute;
            z-index: 1;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
            max-width: 250px;
            white-space: normal;
            border: 1px solid black;
            word-wrap: break-word;
            text-align: center;
        }

        .tooltip-container:hover .tooltiptext {
            visibility: visible;
        }

        .tooltiptext a {
            color: blue;
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <!-- Navigation Bar -->
    {{> header headerClass="reserve-page-header" navClass="reserve-page-navbar" title="NBA STADIUM RESERVATION" subtitle="Reserve your seats now to witness your favorite NBA basketball action live!" }}

    <div class="reserve-container">
        <div class="new-date-time-container">
            <div class="new-date-input-container">
                <label class="new-date-label" for="reservation-date">Date: </label>
                <div class="date-input-wrapper">
                    <input type="date" id="reservation-date" class="date-input" data-placeholder="Select date">
                    <i class="fas fa-calendar-alt calendar-icon" onclick="document.getElementById('reservation-date').focus();"></i>
                </div>
            </div>
            <div class="new-dropdown-container">
                <label for="reservation-time">Time:</label>
                <select id="reservation-time" name="reservation-time">
                    <option value="" disabled selected>Select Time</option>
                    <option value="9:00 AM - 9:30 AM">9:00 AM - 9:30 AM</option>
                    <option value="9:30 AM - 10:00 AM">9:30 AM - 10:00 AM</option>
                    <option value="10:00 AM - 10:30 AM">10:00 AM - 10:30 AM</option>
                    <option value="10:30 AM - 11:00 AM">10:30 AM - 11:00 AM</option>
                    <option value="11:00 AM - 11:30 AM">11:00 AM - 11:30 AM</option>
                    <option value="11:30 AM - 12:00 PM">11:30 AM - 12:00 PM</option>
                    <option value="12:00 PM - 12:30 PM">12:00 PM - 12:30 PM</option>
                    <option value="12:30 PM - 1:00 PM">12:30 PM - 1:00 PM</option>
                    <option value="1:30 PM - 2:00 PM">1:30 PM - 2:00 PM</option>
                    <option value="2:00 PM - 2:30 PM">2:00 PM - 2:30 PM</option>
                    <option value="2:30 PM - 3:00 PM">2:30 PM - 3:00 PM</option>
                    <option value="3:00 PM - 3:30 PM">3:00 PM - 3:30 PM</option>
                    <option value="3:30 PM - 4:00 PM">3:30 PM - 4:00 PM</option>
                    <option value="4:00 PM - 4:30 PM">4:00 PM - 4:30 PM</option>
                    <option value="4:30 PM - 5:00 PM">4:30 PM - 5:00 PM</option>
                    <option value="5:00 PM - 5:30 PM">5:00 PM - 5:30 PM</option>                   
                </select>
            </div>
        </div>

        <div class="reserve-legends">
            <div class="reserve-legend"><span class="reserve-available"></span> Available</div>
            <div class="reserve-legend"><span class="reserve-reserved"></span> Reserved</div>
        </div>
        <div class="reserve-seat-chart">
            <div class="reserve-left-column">
                <div class="tooltip-container">
                    <button class="reserve-seat reserve-available" id="D1" onclick="handleSeatClick(this)">D1</button>
                    <span class="tooltiptext"></span>
                </div>
                <div class="tooltip-container">
                    <button class="reserve-seat reserve-available" id="D2" onclick="handleSeatClick(this)">D2</button>
                    <span class="tooltiptext"></span>
                </div>
                <div class="tooltip-container">
                    <button class="reserve-seat reserve-available" id="D3" onclick="handleSeatClick(this)">D3</button>
                    <span class="tooltiptext"></span>
                </div>
            </div>
            <div class="reserve-center-column">
                <div class="reserve-row">
                    <div class="tooltip-container">
                        <button class="reserve-seat reserve-available" id="A1" onclick="handleSeatClick(this)">A1</button>
                        <span class="tooltiptext"></span>
                    </div>
                    <div class="tooltip-container">
                        <button class="reserve-seat reserve-available" id="A2" onclick="handleSeatClick(this)">A2</button>
                        <span class="tooltiptext"></span>
                    </div>
                    <div class="tooltip-container">
                        <button class="reserve-seat reserve-available" id="A3" onclick="handleSeatClick(this)">A3</button>
                        <span class="tooltiptext"></span>
                    </div>
                    <div class="tooltip-container">
                        <button class="reserve-seat reserve-available" id="A4" onclick="handleSeatClick(this)">A4</button>
                        <span class="tooltiptext"></span>
                    </div>
                    <div class="tooltip-container">
                        <button class="reserve-seat reserve-available" id="A5" onclick="handleSeatClick(this)">A5</button>
                        <span class="tooltiptext"></span>
                    </div>
                    <div class="tooltip-container">
                        <button class="reserve-seat reserve-available" id="A6" onclick="handleSeatClick(this)">A6</button>
                        <span class="tooltiptext"></span>
                    </div>
                </div>
                <div class="reserve-court">COURT</div>
                <div class="reserve-row">
                    <div class="tooltip-container">
                        <button class="reserve-seat reserve-available" id="C1" onclick="handleSeatClick(this)">C1</button>
                        <span class="tooltiptext"></span>
                    </div>
                    <div class="tooltip-container">
                        <button class="reserve-seat reserve-available" id="C2" onclick="handleSeatClick(this)">C2</button>
                        <span class="tooltiptext"></span>
                    </div>
                    <div class="tooltip-container">
                        <button class="reserve-seat reserve-available" id="C3" onclick="handleSeatClick(this)">C3</button>
                        <span class="tooltiptext"></span>
                    </div>
                    <div class="tooltip-container">
                        <button class="reserve-seat reserve-available" id="C4" onclick="handleSeatClick(this)">C4</button>
                        <span class="tooltiptext"></span>
                    </div>
                    <div class="tooltip-container">
                        <button class="reserve-seat reserve-available" id="C5" onclick="handleSeatClick(this)">C5</button>
                        <span class="tooltiptext"></span>
                    </div>
                    <div class="tooltip-container">
                        <button class="reserve-seat reserve-available" id="C6" onclick="handleSeatClick(this)">C6</button>
                        <span class="tooltiptext"></span>
                    </div>
                </div>
            </div>
            <div class="reserve-right-column">
                <div class="tooltip-container">
                    <button class="reserve-seat reserve-available" id="B1" onclick="handleSeatClick(this)">B1</button>
                    <span class="tooltiptext"></span>
                </div>
                <div class="tooltip-container">
                    <button class="reserve-seat reserve-available" id="B2" onclick="handleSeatClick(this)">B2</button>
                    <span class="tooltiptext"></span>
                </div>
                <div class="tooltip-container">
                    <button class="reserve-seat reserve-available" id="B3" onclick="handleSeatClick(this)">B3</button>
                    <span class="tooltiptext"></span>
                </div>
            </div>
        </div>
    </div>

<script>
    let selectedSeats = [];

    function isValidReservationTime(reservationDate, reservationTime) {
        const currentDateTime = new Date();
        const [startTime, endTime] = reservationTime.split(" - ");
        const reservationStartTime = new Date(`${reservationDate} ${startTime}`);
        const reservationEndTime = new Date(`${reservationDate} ${endTime}`);

        // Check if reservation start time is in the past
        if (reservationStartTime < currentDateTime) {
            return false;
        }

        return true;
    }

    function updateSeatStatuses(reservedSeats) {
        console.log('Reserved Seats:', reservedSeats); // Log reserved seats for debugging
        const allSeats = document.querySelectorAll('.reserve-seat');
        allSeats.forEach(seat => {
            seat.classList.remove('reserve-available', 'reserve-reserved', 'reserve-selected');
            const tooltip = seat.nextElementSibling;
            const reservedSeat = reservedSeats.find(reserved => reserved.seatNumber === seat.id);
            if (reservedSeat) {
                seat.classList.add('reserve-reserved');
                if (tooltip) {
                    if (reservedSeat.anonymous && !reservedSeat.isCurrentUser) {
                        tooltip.innerHTML = 'This seat is reserved anonymously.';
                    } else {
                        tooltip.innerHTML = `<a href='${reservedSeat.userProfileUrl}'>This seat is reserved by ${reservedSeat.userName}.</a>`;
                    }   
                }
            } else {
                seat.classList.add('reserve-available');
                if (tooltip) {
                    tooltip.innerHTML = 'Seat is available.';
                }
            }
        });
    }

    function fetchReservedSeats() {
        const reservationDate = document.getElementById('reservation-date').value;
        const reservationTime = document.getElementById('reservation-time').value;

        // Get the arena from the URL parameters
        const urlParams = new URLSearchParams(window.location.search);
        const selectedArena = urlParams.get('arena');

        if (!reservationDate || !reservationTime || !selectedArena) {
            console.log('Missing required data for fetching reserved seats.');
            return;
        }

        console.log('Fetching reserved seats for:');
        console.log('Date:', reservationDate);
        console.log('Time:', reservationTime);
        console.log('Arena:', selectedArena);

        fetch(`/reserved_seats?date=${reservationDate}&time=${reservationTime}&stadium=${selectedArena}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    console.log('Fetch Reserved Seats Success:', data.reservedSeats); // Log the data received
                    updateSeatStatuses(data.reservedSeats);
                } else {
                    alert('Failed to fetch reserved seats: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error fetching reserved seats:', error);
            });
    }

    document.getElementById('reservation-date').addEventListener('change', fetchReservedSeats);
    document.getElementById('reservation-time').addEventListener('change', fetchReservedSeats);

    document.addEventListener('DOMContentLoaded', function() {
        const dateInputs = document.querySelectorAll('.date-input');
        dateInputs.forEach(input => {
            input.addEventListener('focus', () => {
                input.type = 'date';
                input.showPicker(); // Show calendar picker
            });
            input.addEventListener('blur', () => {
                if (!input.value) {
                    input.type = 'text';
                    input.placeholder = input.getAttribute('data-placeholder');
                }
            });
            if (!input.value) {
                input.type = 'text';
                input.placeholder = input.getAttribute('data-placeholder');
            }
        });

        // Fetch reserved seats when the page loads
        fetchReservedSeats();
    });

    function handleSeatClick(button) {
        const seatId = button.id;
        const index = selectedSeats.indexOf(seatId);

        if (index > -1) {
            selectedSeats.splice(index, 1);
            button.classList.remove('reserve-selected');
        } else {
            selectedSeats.push(seatId);
            button.classList.add('reserve-selected');
        }
    }
</script>
</body>
